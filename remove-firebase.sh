#!/bin/bash

echo "üßπ –û—á–∏—â–µ–Ω–Ω—è Next.js –ø—Ä–æ–µ–∫—Ç—É –≤—ñ–¥ Firebase Studio..."

# –í–∏–¥–∞–ª–µ–Ω–Ω—è Firebase –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ–π–Ω–∏—Ö —Ñ–∞–π–ª—ñ–≤
echo "–í–∏–¥–∞–ª–µ–Ω–Ω—è Firebase –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ–π–Ω–∏—Ö —Ñ–∞–π–ª—ñ–≤..."
rm -f .firebaserc
rm -f firebase.json
rm -f firestore.rules
rm -f firestore.indexes.json
rm -f storage.rules
rm -rf .firebase/

# –í–∏–¥–∞–ª–µ–Ω–Ω—è Firebase Studio —Å–ø–µ—Ü–∏—Ñ—ñ—á–Ω–∏—Ö —Ñ–∞–π–ª—ñ–≤
rm -f .env.local.example
rm -f src/lib/firebase.ts
rm -f src/lib/firebase.js
rm -f firebase-debug.log
rm -f ui-debug.log

# –†–µ–∑–µ—Ä–≤–Ω–µ –∫–æ–ø—ñ—é–≤–∞–Ω–Ω—è package.json
cp package.json package.json.backup

# –í–∏–¥–∞–ª–µ–Ω–Ω—è Firebase –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π –∑ package.json
echo "–í–∏–¥–∞–ª–µ–Ω–Ω—è Firebase –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π..."
npm uninstall firebase @firebase/app @firebase/auth @firebase/firestore @firebase/storage firebase-tools firebase-admin firebase-functions firebase/app firebase/auth firebase/firestore

# –ü–æ—à—É–∫ —ñ –≤–∏–¥–∞–ª–µ–Ω–Ω—è Firebase —ñ–º–ø–æ—Ä—Ç—ñ–≤ —É —Ñ–∞–π–ª–∞—Ö
echo "–û—á–∏—â–µ–Ω–Ω—è Firebase —ñ–º–ø–æ—Ä—Ç—ñ–≤ –∑ –∫–æ–¥—É..."
find . -name "*.js" -o -name "*.ts" -o -name "*.jsx" -o -name "*.tsx" | grep -v node_modules | while read file; do
    # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ä–µ–∑–µ—Ä–≤–Ω–æ—ó –∫–æ–ø—ñ—ó —Ñ–∞–π–ª—É
    cp "$file" "$file.backup"
    
    # –í–∏–¥–∞–ª–µ–Ω–Ω—è Firebase —ñ–º–ø–æ—Ä—Ç—ñ–≤
    sed -i '/import.*firebase/d' "$file"
    sed -i '/import.*@firebase/d' "$file"
    sed -i '/from ['"'"'"]firebase/d' "$file"
    sed -i '/from ['"'"'"]@firebase/d' "$file"
    sed -i '/from ['"'"'"]\.\./g' "$file"
    
    # –í–∏–¥–∞–ª–µ–Ω–Ω—è Firebase –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó
    sed -i '/const firebaseConfig/,/};/d' "$file"
    sed -i '/initializeApp/d' "$file"
    sed -i '/getFirestore/d' "$file"
    sed -i '/getAuth/d' "$file"
    sed -i '/getStorage/d' "$file"
    
    # –í–∏–¥–∞–ª–µ–Ω–Ω—è Firebase Studio —Å–ø–µ—Ü–∏—Ñ—ñ—á–Ω–æ–≥–æ –∫–æ–¥—É
    sed -i '/firebase\/app/d' "$file"
    sed -i '/firebase\/auth/d' "$file"
    sed -i '/firebase\/firestore/d' "$file"
done

# –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–æ–≤–æ–≥–æ package.json –¥–ª—è Next.js
echo "–°—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–æ–≤–æ–≥–æ package.json..."
cat > package.json << 'EOF'
{
  "name": "skill-sculptor",
  "version": "1.0.0",
  "private": true,
  "scripts": {
    "dev": "next dev",
    "build": "next build",
    "start": "next start",
    "lint": "next lint",
    "export": "next export"
  },
  "dependencies": {
    "next": "14.1.0",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "axios": "^1.6.0",
    "@next/font": "^14.1.0"
  },
  "devDependencies": {
    "@types/node": "^20.11.0",
    "@types/react": "^18.2.0",
    "@types/react-dom": "^18.2.0",
    "eslint": "^8.56.0",
    "eslint-config-next": "14.1.0",
    "typescript": "^5.3.0",
    "tailwindcss": "^3.4.0",
    "postcss": "^8.4.0",
    "autoprefixer": "^10.4.0"
  }
}
EOF

# –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –Ω–æ–≤–∏—Ö –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π
echo "–í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π..."
npm install

# –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –±–∞–∑–æ–≤–æ—ó —Å—Ç—Ä—É–∫—Ç—É—Ä–∏ Next.js –ø—Ä–æ–µ–∫—Ç—É
echo "–°—Ç–≤–æ—Ä–µ–Ω–Ω—è –±–∞–∑–æ–≤–æ—ó —Å—Ç—Ä—É–∫—Ç—É—Ä–∏..."
mkdir -p src/app
mkdir -p src/components
mkdir -p src/lib
mkdir -p src/utils
mkdir -p public
mkdir -p styles

# –°—Ç–≤–æ—Ä–µ–Ω–Ω—è next.config.js
cat > next.config.js << 'EOF'
/** @type {import('next').NextConfig} */
const nextConfig = {
  experimental: {
    appDir: true,
  },
  images: {
    domains: ['localhost'],
  },
}

module.exports = nextConfig
EOF

# –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –±–∞–∑–æ–≤–æ–≥–æ layout.tsx
cat > src/app/layout.tsx << 'EOF'
import './globals.css'
import { Inter } from 'next/font/google'

const inter = Inter({ subsets: ['latin'] })

export const metadata = {
  title: 'Skill Sculptor',
  description: '–í–µ–±-–¥–æ–¥–∞—Ç–æ–∫ –¥–ª—è —Ä–æ–∑–≤–∏—Ç–∫—É –Ω–∞–≤–∏—á–æ–∫',
}

export default function RootLayout({
  children,
}: {
  children: React.ReactNode
}) {
  return (
    <html lang="uk">
      <body className={inter.className}>{children}</body>
    </html>
  )
}
EOF

# –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –±–∞–∑–æ–≤–æ–≥–æ page.tsx
cat > src/app/page.tsx << 'EOF'
export default function Home() {
  return (
    <main className="flex min-h-screen flex-col items-center justify-between p-24">
      <div className="z-10 max-w-5xl w-full items-center justify-between font-mono text-sm lg:flex">
        <h1 className="text-4xl font-bold">Skill Sculptor</h1>
        <p className="text-xl">–õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ –¥–æ –≤–∞—à–æ–≥–æ –¥–æ–¥–∞—Ç–∫—É –¥–ª—è —Ä–æ–∑–≤–∏—Ç–∫—É –Ω–∞–≤–∏—á–æ–∫!</p>
      </div>
    </main>
  )
}
EOF

# –°—Ç–≤–æ—Ä–µ–Ω–Ω—è globals.css
cat > src/app/globals.css << 'EOF'
@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --foreground-rgb: 0, 0, 0;
  --background-start-rgb: 214, 219, 220;
  --background-end-rgb: 255, 255, 255;
}

@media (prefers-color-scheme: dark) {
  :root {
    --foreground-rgb: 255, 255, 255;
    --background-start-rgb: 0, 0, 0;
    --background-end-rgb: 0, 0, 0;
  }
}

body {
  color: rgb(var(--foreground-rgb));
  background: linear-gradient(
      to bottom,
      transparent,
      rgb(var(--background-end-rgb))
    )
    rgb(var(--background-start-rgb));
}
EOF

# –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –±–∞–∑–æ–≤–æ–≥–æ README
cat > README.md << 'EOF'
# Skill Sculptor

–í–µ–±-–¥–æ–¥–∞—Ç–æ–∫ –¥–ª—è —Ä–æ–∑–≤–∏—Ç–∫—É –Ω–∞–≤–∏—á–æ–∫.

## –ó–∞–ø—É—Å–∫ –ø—Ä–æ–µ–∫—Ç—É

```bash
# –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π
npm install

# –ó–∞–ø—É—Å–∫ —É —Ä–µ–∂–∏–º—ñ —Ä–æ–∑—Ä–æ–±–∫–∏
npm start

# –ó–±—ñ—Ä–∫–∞ –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω—É
npm run build
```

## Docker

```bash
# –ó–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ Docker Compose
docker-compose up -d
```
EOF

echo "‚úÖ –û—á–∏—â–µ–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
echo "üìÅ –†–µ–∑–µ—Ä–≤–Ω—ñ –∫–æ–ø—ñ—ó –∑–±–µ—Ä–µ–∂–µ–Ω–æ –∑ —Ä–æ–∑—à–∏—Ä–µ–Ω–Ω—è–º .backup"
echo "üöÄ –ü—Ä–æ–µ–∫—Ç –≥–æ—Ç–æ–≤–∏–π –¥–æ –∑–∞–ø—É—Å–∫—É —è–∫ –ø–æ–≤–Ω–æ—Ü—ñ–Ω–Ω–∏–π –≤–µ–±-–¥–æ–¥–∞—Ç–æ–∫"